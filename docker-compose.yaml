version: "3.9"
services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888


  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-kafka1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-kafka1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  postgres_one:
    image: postgres:14.1-alpine
    hostname: postgres_one
    container_name: postgres_one
    restart: always
    env_file:
      - .env
    volumes:
      - postgres-data-one:/var/lib/postgresql
    ports:
      - "5433:5433"
    command: -p 5433

  postgres_zero:
    image: postgres:14.1-alpine
    hostname: postgres_zero
    container_name: postgres_zero
    restart: always
    env_file:
      - .env
    volumes:
      - postgres-data-zero:/var/lib/postgresql
    ports:
      - "5432:5432"

  web_zero:
    image: realm74/baum_zero
    container_name: web_zero
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres_zero
      - kafka1
    command:
      sh -c "alembic upgrade head &&
      gunicorn app.main:app --workers 1
      --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - web_zero-file:/app/files

  web_one:
    image: realm74/baum_one
    container_name: web_one
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres_one
      - kafka1
    command:
      sh -c "alembic upgrade head &&
      gunicorn app.main:app --workers 1
      --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8080"
    ports:
      - "8080:8080"
    volumes:
      - web_one-file:/app/files


volumes:
  postgres-data-one:
  postgres-data-zero:
  web_one-file:
  web_zero-file: